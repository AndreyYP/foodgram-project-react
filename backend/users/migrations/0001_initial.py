# Generated by Django 4.2.5 on 2023-09-24 13:08

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('role', models.CharField(choices=[('user', 'User'), ('moderator', 'Moderator'), ('admin', 'Admin')], default='user', max_length=32, verbose_name='Роль')),
                ('bio', models.TextField(blank=True, max_length=256, verbose_name='О Себе')),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'Email уже используется'}, help_text='Укажите свой email', max_length=100, unique=True, verbose_name='Почта')),
                ('username', models.CharField(error_messages={'unique': 'Логин уже используется'}, help_text='Укажите свой логин', max_length=30, unique=True, verbose_name='Логин')),
                ('first_name', models.CharField(blank=True, help_text='Укажите свое имя', max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, help_text='Укажите свою фамилию', max_length=30, verbose_name='Фамилия')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('password', models.CharField(help_text='Введите пароль', max_length=30, verbose_name='Пароль')),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
